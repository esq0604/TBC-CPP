#include<iostream>

//함수의 리턴값에 대해서도 auto를 쓸 수 있다.
//파라미터경우는 auto로 불가능.
//auto는 상황에 따라서, 계산과정에 따라 나오는것.
//다양한 형을 파라미터로 넣어 함수가 자동으로 정의되는 것을 원한다면 
//입력 파라미터에 auto를 넣고싶다는 것은 추론해달라는것이 아닌
//추론해달라는것이 아닌 다양한 경우에 대해 add함수가 자동으로 만들어줬으면
//좋겠다라는 것이기때문에 의도가 다르다.
// 이럴경우 template을 사용하면 된다.
//함수를 선언할때 자취를남긴다?? trailing 라는방법도있음.

auto add(int x, int y) ->int //trailing 리턴타입을 남겨주는법.
{
	return x + (double)y;

	//cpp17에서는 여러개의 리턴벨류를 동시에 반환하는 방법이 쉬워짐.
} 
int main()
{
	using namespace std;

	//한줄에 중복된 정보가 있음.
	//123은 정수, a의 데이터타입이 int가 될것은 뻔한 말이다
	//auto로 교체를 해줄수가 있다.
	//auto a가 int형이 된다. 자료형을 상황에따라 스스로 결정함=형추론 ,auto키워드를사용
	//초기화가 안된다면 사용할수가 없다.
	auto a = 123;
	auto d = 123.0;

	//자동형추론을 이용한다면 프로그래머가 계산결과가 어떤형으로 나올지 정확히
	//알고있는게 좋음. 
	auto c = 1 + 2.0;

	auto result = add(1,2);

	return 0;
}