#include<iostream>
using namespace std;

//프로그램이 실행시 min이라는 함수가 호출이됨
//min이라는 함수의 실행코드를 가져오고 따라서 실행하자
//x,y를 선언 및 값을 복사한후 값을 리턴하고
//cout으로 출력하는 일련의 과정이 일어난다.
//작은함수가 많이 사용되는 있을수있음.
//이러한 과정의 시간이 오래걸리는경우
//inline함수를 사용하는 경우가 있음.
int min(int x, int y)
{
	return x > y ? y : x;
}
//보통 헤더파일에 함수를 정의할때 많이사용함
//
inline int min2(int  x, int y)
{
	return x > y ? y : x;
}

int main()
{
	cout << min(5, 6) << endl;
	cout << min(3, 2) << endl;

	//inline으로 작성시 함수가 아닌것처럼 작동을함.
	//코드를 넣은것처럼 컴파일이됨.
	//컴파일러가 하는일이다.
	//함수가 호출될일도 없고, 지역변수의 선언 및 삭제가 일어날일도 없음
	//-->빨라진다
	//inline 키워드는 할수있으면 해달라는 권장, 권유정도이다.
	//그래서 모든함수를 인라인으로 바꾼다고 빨라지는것이아님.
	//요즘컴파일러는 좋아져서 인라인이 없어도 인라인넣으면 빨라지겠네 싶으면 
	//알아서 해준다. 최근에는 인라인을 써도 빨라진다는보장이없다.
	cout << (5 > 6 ? 6 : 5) << endl;


}